/*! coi-serviceworker v0.1.7 - Guido Zuidhof, licensed under MIT */
let e=!1;"undefined"==typeof window?(self.addEventListener("install",(()=>self.skipWaiting())),self.addEventListener("activate",(e=>e.waitUntil(self.clients.claim()))),self.addEventListener("message",(t=>{t.data&&("deregister"===t.data.type?self.registration.unregister().then((()=>self.clients.matchAll())).then((e=>{e.forEach((e=>e.navigate(e.url)))})):"coepCredentialless"===t.data.type&&(e=t.data.value))})),self.addEventListener("fetch",(function(t){const s=t.request;if("only-if-cached"===s.cache&&"same-origin"!==s.mode)return;const r=e&&"no-cors"===s.mode?new Request(s,{credentials:"omit"}):s;t.respondWith(fetch(r).then((t=>{if(0===t.status)return t;const s=new Headers(t.headers);return s.set("Cross-Origin-Embedder-Policy",e?"credentialless":"require-corp"),s.set("Cross-Origin-Opener-Policy","same-origin"),new Response(t.body,{status:t.status,statusText:t.statusText,headers:s})})).catch((e=>{})))}))):(()=>{const e={shouldRegister:()=>!0,shouldDeregister:()=>!1,coepCredentialless:()=>!1,doReload:()=>window.location.reload(),quiet:!1,...window.coi},t=navigator;t.serviceWorker&&t.serviceWorker.controller&&(t.serviceWorker.controller.postMessage({type:"coepCredentialless",value:e.coepCredentialless()}),e.shouldDeregister()&&t.serviceWorker.controller.postMessage({type:"deregister"})),!1===window.crossOriginIsolated&&e.shouldRegister()&&(window.isSecureContext?t.serviceWorker&&t.serviceWorker.register(window.document.currentScript.src).then((s=>{e.quiet,s.addEventListener("updatefound",(()=>{e.quiet,e.doReload()})),s.active&&!t.serviceWorker.controller&&(e.quiet,e.doReload())}),(t=>{e.quiet})):e.quiet)})();
