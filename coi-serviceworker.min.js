/*! coi-serviceworker v0.1.7 - Guido Zuidhof and contributors, licensed under MIT */
let coepCredentialless=!1;"undefined"==typeof window?(self.addEventListener("install",(()=>self.skipWaiting())),self.addEventListener("activate",(e=>e.waitUntil(self.clients.claim()))),self.addEventListener("message",(e=>{e.data&&("deregister"===e.data.type?self.registration.unregister().then((()=>self.clients.matchAll())).then((e=>{e.forEach((e=>e.navigate(e.url)))})):"coepCredentialless"===e.data.type&&(coepCredentialless=e.data.value))})),self.addEventListener("fetch",(function(e){const r=e.request;if("only-if-cached"===r.cache&&"same-origin"!==r.mode)return;const o=coepCredentialless&&"no-cors"===r.mode?new Request(r,{credentials:"omit"}):r;e.respondWith(fetch(o).then((e=>{if(0===e.status)return e;const r=new Headers(e.headers);return r.set("Cross-Origin-Embedder-Policy",coepCredentialless?"credentialless":"require-corp"),coepCredentialless||r.set("Cross-Origin-Resource-Policy","cross-origin"),r.set("Cross-Origin-Opener-Policy","same-origin"),new Response(e.body,{status:e.status,statusText:e.statusText,headers:r})})).catch((e=>console.error(e))))}))):(()=>{const e=new URL(window.location.href);e.searchParams.get();const r=e.searchParams.get("coiReloaded");e.searchParams.delete("coiReloaded");const o="coepdegrade"==r,s={shouldRegister:()=>!r,shouldDeregister:()=>!1,coepCredentialless:()=>!0,coepDegrade:()=>!0,doReload:()=>window.location.replace(e.href),quiet:!1,...window.coi},t=navigator,i=t.serviceWorker&&t.serviceWorker.controller;i&&!window.crossOriginIsolated&&e.searchParams.set("coiCoepHasFailed","true");const a=e.searchParams.get("coiCoepHasFailed");if(i){const r=s.coepDegrade()&&!(o||window.crossOriginIsolated);t.serviceWorker.controller.postMessage({type:"coepCredentialless",value:!(r||a&&s.coepDegrade())&&s.coepCredentialless()}),r&&(!s.quiet&&console.log("Reloading page to degrade COEP."),e.searchParams.set("coiReloaded","coepdegrade"),s.doReload("coepdegrade")),s.shouldDeregister()&&t.serviceWorker.controller.postMessage({type:"deregister"})}!1===window.crossOriginIsolated&&s.shouldRegister()&&(window.isSecureContext?t.serviceWorker&&t.serviceWorker.register(window.document.currentScript.src).then((r=>{!s.quiet&&console.log("COOP/COEP Service Worker registered",r.scope),r.addEventListener("updatefound",(()=>{!s.quiet&&console.log("Reloading page to make use of updated COOP/COEP Service Worker."),e.searchParams.set("coiReloaded","updatefound"),s.doReload()})),r.active&&!t.serviceWorker.controller&&(!s.quiet&&console.log("Reloading page to make use of COOP/COEP Service Worker."),e.searchParams.set("coiReloaded","notcontrolling"),s.doReload())}),(e=>{!s.quiet&&console.error("COOP/COEP Service Worker failed to register:",e)})):!s.quiet&&console.log("COOP/COEP Service Worker not registered, a secure context is required."))})();